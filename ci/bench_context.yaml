name: Context-Aware Bandit Benchmark

on:
  pull_request:
    paths:
      - 'shinka/llm/dynamic_sampling.py'
      - 'tests/test_context_aware_bandit.py'
      - 'bench/context_bandit_bench.py'
  workflow_dispatch:

jobs:
  benchmark:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest matplotlib seaborn pandas numpy
        
    - name: Run unit tests
      run: |
        pytest -q tests/test_context_aware_bandit.py
        
    - name: Run quick benchmark
      run: |
        make bench_quick
        
    - name: Check benchmark results
      run: |
        python -c "
        import pandas as pd
        import sys
        
        # Read summary (will be generated by bench_quick)
        try:
            df = pd.read_csv('reports/context_bandit/summary.csv', header=[0,1], index_col=[0,1])
            print('Benchmark completed successfully')
            print(df)
        except Exception as e:
            print(f'Benchmark analysis failed: {e}')
            sys.exit(1)
        "
        
    - name: Upload benchmark artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: benchmark-results
        path: |
          reports/context_bandit/
          !reports/context_bandit/raw/
        retention-days: 7